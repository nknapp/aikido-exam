{"version":3,"sources":["assets/logo.svg","layout/DefaultLayout.tsx","App.tsx","reportWebVitals.ts","i18n/translations/de.ts","i18n/i18n.ts","index.tsx"],"names":["DefaultLayout","children","console","log","logo","t","useTranslation","Navbar","bg","Container","Brand","width","height","src","alt","App","i18n","language","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","de","initI18Next","a","use","initReactI18next","init","resources","translation","lng","interpolation","escapeValue","initialize","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"gRAAe,MAA0B,iC,OCK5BA,EAA0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxCC,QAAQC,IAAIC,GACZ,IAAQC,EAAMC,cAAND,EACR,OACE,qCACE,cAACE,EAAA,EAAD,CAAQC,GAAI,QAAZ,SACE,cAACC,EAAA,EAAD,UACE,eAACF,EAAA,EAAOG,MAAR,WACE,qBAAKC,MAAM,KAAKC,OAAO,KAAKC,IAAKT,EAAMU,IAAKT,EAAE,eAAiB,IAC9DA,EAAE,oBAIT,cAACI,EAAA,EAAD,UAAYR,Q,OCTHc,MAJf,WACE,OAAO,cAAC,EAAD,UAAgBC,IAAKC,YCQfC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCPDQ,EAAwB,CACnC,YAAa,qBCCR,SAAeC,IAAtB,+B,4CAAO,sBAAAC,EAAA,sEACCb,IAAKc,IAAIC,KAAkBC,KAAK,CACpCC,UAAW,CACTN,GAAI,CACFO,YAAaP,IAGjBQ,IAAK,KACLC,cAAe,CACbC,aAAa,KATZ,4C,sBAeQrB,EAAf,E,4CCXA,sBAAAa,EAAA,sEACQD,IADR,4C,kEAIAU,GAAajB,MAAK,WAChBkB,SAASC,MAAQxB,IAAKX,EAAE,aACxBoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFJ,SAASK,eAAe,YAO5B1B,M","file":"static/js/main.f8c65021.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.35fd12aa.svg\";","import { Container, Navbar } from \"react-bootstrap\";\nimport { useTranslation } from \"react-i18next\";\nimport React from \"react\";\nimport logo from \"src/assets/logo.svg\";\n\nexport const DefaultLayout: React.FC = ({ children }) => {\n  console.log(logo);\n  const { t } = useTranslation();\n  return (\n    <>\n      <Navbar bg={\"light\"}>\n        <Container>\n          <Navbar.Brand>\n            <img width=\"30\" height=\"30\" src={logo} alt={t(\"app.title\")} />{\" \"}\n            {t(\"app.title\")}\n          </Navbar.Brand>\n        </Container>\n      </Navbar>\n      <Container>{children}</Container>\n    </>\n  );\n};\n","import React from \"react\";\nimport \"src/assets/styles/styles.scss\";\nimport { DefaultLayout } from \"./layout/DefaultLayout\";\nimport i18n from \"i18next\";\n\nfunction App(): JSX.Element {\n  return <DefaultLayout>{i18n.language}</DefaultLayout>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { TranslationSchema } from \"./schema\";\n\nexport const de: TranslationSchema = {\n  \"app.title\": \"Aikido-Pr√ºfung\",\n};\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport { de } from \"./translations/de\";\n\nexport async function initI18Next(): Promise<void> {\n  await i18n.use(initReactI18next).init({\n    resources: {\n      de: {\n        translation: de,\n      },\n    },\n    lng: \"de\",\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\n}\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { initI18Next } from \"./i18n/i18n\";\nimport i18n from \"i18next\";\n\nasync function initialize() {\n  await initI18Next();\n}\n\ninitialize().then(() => {\n  document.title = i18n.t(\"app.title\");\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}